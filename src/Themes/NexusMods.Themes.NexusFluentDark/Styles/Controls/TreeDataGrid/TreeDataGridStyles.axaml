<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters1="clr-namespace:NexusMods.Themes.NexusFluentDark.Converters">
    
    <Styles.Resources>
        <SolidColorBrush x:Key="TreeDataGridGridLinesBrush" Color="{StaticResource SurfaceTranslucentMid}" Opacity="1" />
        <SolidColorBrush x:Key="TreeDataGridHeaderBackgroundPointerOverBrush" Color="White" Opacity="0.1" />
        <SolidColorBrush x:Key="TreeDataGridHeaderBackgroundPressedBrush" Color="White" Opacity="0.6" />
        <SolidColorBrush x:Key="TreeDataGridHeaderBorderBrushPointerOverBrush" Color="Transparent" />
        <SolidColorBrush x:Key="TreeDataGridHeaderBorderBrushPressedBrush" Color="Transparent" />
        <SolidColorBrush x:Key="TreeDataGridHeaderForegroundPointerOverBrush" Color="White" />
        <SolidColorBrush x:Key="TreeDataGridHeaderForegroundPressedBrush" Color="White" />
        <SolidColorBrush x:Key="TreeDataGridSelectedCellBackgroundBrush" Color="White" Opacity="0.4" />
    </Styles.Resources>
    
    <!-- Style Definitions -->
    
    <Style Selector="TreeDataGridColumnHeader">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="8,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
          <ControlTemplate>
            <Border Name="DataGridBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
              <DockPanel VerticalAlignment="Stretch">
                <Panel DockPanel.Dock="Right"
                       TabIndex="2">
                  <Rectangle Fill="{StaticResource TreeDataGridGridLinesBrush}"
                             HorizontalAlignment="Center"
                             Width="1"
                             Height="24"/>
                  <Thumb Name="PART_Resizer"
                         DockPanel.Dock="Right"
                         Background="Transparent"
                         Cursor="SizeWestEast"
                         IsVisible="{TemplateBinding CanUserResize}"
                         Width="5">
                    <Thumb.Template>
                      <ControlTemplate>
                        <Border Background="{TemplateBinding Background}"
                                VerticalAlignment="Stretch" />
                      </ControlTemplate>
                    </Thumb.Template>
                  </Thumb>
                </Panel>
                
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter Name="PART_ContentPresenter"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      TabIndex="0">
                        <ContentPresenter.DataTemplates>
                            <DataTemplate DataType="x:String">
                                <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ContentPresenter.DataTemplates>
                    </ContentPresenter>
                    <Border
                        Padding="0,3,0,0"
                        Background="Transparent"
                        Height="20"
                        Width="20">
                        <Path Name="SortIcon"
                              DockPanel.Dock="Right"
                              Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Stretch="Uniform"
                              Height="12"
                              TabIndex="1" />
                    </Border>
                </StackPanel>
                
              </DockPanel>
            </Border>
          </ControlTemplate>
        </Setter>
        
    </Style>

    <!-- Default Header Style for TreeDataGrid, for when the header exists -->
    <Style Selector="TreeDataGrid">
        
        <Style.Resources>
            <!-- TreeDataGrid Sort Icon replacements -->
            <StreamGeometry x:Key="TreeDataGridSortIconDescendingPath">M7 14L12 9L17 14H7Z</StreamGeometry>
            <StreamGeometry x:Key="TreeDataGridSortIconAscendingPath">M0 0L5 5L10 0H0Z</StreamGeometry>

            <!-- TreeDataGrid Expander Icon replacements -->
            <StreamGeometry x:Key="TreeDataGridItemCollapsedChevronPathData">M7.15833 13.825L10.975 10L7.15833 6.175L8.33333 5L13.3333 10L8.33333 15L7.15833 13.825Z</StreamGeometry>
            <StreamGeometry x:Key="TreeDataGridItemExpandedChevronPathData">M6.175 7.15833L10 10.975L13.825 7.15833L15 8.33333L10 13.3333L5 8.33333L6.175 7.15833Z</StreamGeometry>
            
            <!-- TreeDataGrid Sort Icon replacements -->
            <SolidColorBrush x:Key="TreeDataGridGridLinesBrush" Color="{StaticResource SurfaceTranslucentMid}" />
        </Style.Resources>

        <Setter Property="Background" Value="{StaticResource BrandTranslucentDark300Brush}" />
        <Setter Property="BorderThickness" Value="0" />
        
        <!-- Catch all text styling -->

        <!-- TODO: remove this and use more specific selectors to fix all existing trees using this -->
        <Style Selector="^ TextBlock">
            <Setter Property="Foreground" Value="{StaticResource NeutralSubduedBrush}" />
            <Setter Property="Theme" Value="{StaticResource BodyMDNormalTheme}" />
        </Style>

        <!-- Header styling -->

        <Style Selector="^ /template/ Border#ColumnHeadersPresenterBorder">

            <Setter Property="Background" Value="{StaticResource SurfaceLowBrush}" />
            <Setter Property="Height" Value="36" />
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="BorderBrush" Value="{StaticResource StrokeTranslucentWeakBrush}" />

            <!-- Column Header/Text Style -->
            <Style Selector="^ TreeDataGridColumnHeader">

                <Setter Property="Foreground" Value="{StaticResource NeutralSubduedBrush}" />
                <Setter Property="BorderThickness" Value="0,0,1,0" />

                <!-- Text Inside Column Header -->
                <Style Selector="^ TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource NeutralSubduedBrush}" />
                    <Setter Property="Theme" Value="{StaticResource TitleXSSemiTheme}" />
                </Style>

                <!-- Padding gets inherited by the ContentPresenter, which means that the sorting icon is ignoring this. -->
                <!-- To properly pad the sorting icon, we need to override the template and rearrange the content. -->
                <!-- <Setter Property="Padding" Value="8,0" /> -->
                
                <!-- Sort Icon replacements -->
                <Style Selector="^[SortDirection=Ascending] /template/ Path#SortIcon">
                    <Setter Property="IsVisible" Value="True" />
                    <Setter Property="Data" Value="{DynamicResource TreeDataGridSortIconAscendingPath}" />
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Width" Value="12" />
                </Style>

                <Style Selector="^[SortDirection=Descending] /template/ Path#SortIcon">
                    <Setter Property="IsVisible" Value="True" />
                    <Setter Property="Data" Value="{DynamicResource TreeDataGridSortIconDescendingPath}" />
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Width" Value="12" />
                </Style>
                
                <!-- resizer -->
                
                
                
                <!-- <Style Selector="^ /template/ Thumb#PART_Resizer"> -->
                <!--     <Setter Property="Width" Value="5" /> -->
                <!--     <Setter Property="Background" Value="Transparent" /> -->
                <!-- </Style> -->
                
            </Style>
        </Style>

        <!-- First column header padding -->
        <Style Selector="^ TreeDataGridColumnHeader:nth-child(1)">
            <Setter Property="Padding" Value="24,0,0,0" />
        </Style>

        <!-- Last column header padding -->
        <!-- <Style Selector="^ TreeDataGridColumnHeader:nth-last-child(1)"> -->
        <!--     <Setter Property="Padding" Value="0,0,24,0" /> -->
        <!--     <Style Selector="^ TextBlock"> -->
        <!--         <Setter Property="TextAlignment" Value="Center" /> -->
        <!--     </Style> -->
        <!-- </Style> -->


        <!-- Row Style -->
        <Style Selector="^ TreeDataGridRow">

            <Setter Property="Height" Value="52" />
            <Setter Property="ClipToBounds" Value="False" />

            <!-- Generic column cell padding -->
            <Style Selector="^ :is(TreeDataGridCell)">
                <Setter Property="Padding" Value="8,2" />
            </Style>

            <!-- First column cell padding -->
            <Style Selector="^ :is(TreeDataGridCell):nth-child(1)">
                <Setter Property="Padding" Value="12,2,0,2" />
            </Style>

            <!-- Last column cell padding -->
            <Style Selector="^ :is(TreeDataGridCell):nth-last-child(1)">
                <Setter Property="Padding" Value="8,2,24,2" />
            </Style>

            <!-- Expander Column styling -->
            <Style Selector="^ TreeDataGridExpanderCell">
                
                <!-- Override padding since this is a wrapper cell -->
                <Setter Property="Padding" Value="0,0,0,0" />

                <!-- Nested cell padding -->
                <Style Selector="^ Border#CellBorder :is(TreeDataGridCell)">
                    <!-- This goes from after the expander to the end of the cell, but parent cell padding is also applied. -->
                    <Setter Property="Padding" Value="4,0,0,0" />

                </Style>

                <!-- Update the padding converter on the Border inside the TreeDataGridExpanderCell template -->
                <!-- Rest is copied from the default style: -->
                <!-- https://github.com/AvaloniaUI/Avalonia.Controls.TreeDataGrid/blob/38dce086b6c06503ab29bf824063f6fd113ea309/src/Avalonia.Controls.TreeDataGrid/Themes/Generic.axaml#L226-L245 -->
                <Setter Property="Template">
                    <ControlTemplate>
                        <Border x:Name="CellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Padding="{TemplateBinding Indent, Converter={x:Static converters1:TreeDataGridIndentToPaddingConverter.Instance}}">
                            <!-- This is to adjust the left padding based on the indent level of the row. -->

                            <DockPanel>
                                <!-- Indent line element -->
                                <Border DockPanel.Dock="Left"
                                        Width="20"
                                        IsVisible="{TemplateBinding Indent, Converter={x:Static converters1:TreeDataGridIndentToBoolConverter.Instance}}">
                                    <!-- This is to hide the indent line when the row is not indented. -->
                                    <Border HorizontalAlignment="Center"
                                            Width="2"
                                            Background="{StaticResource SurfaceTranslucentMidBrush}" />
                                </Border>

                                <DockPanel>
                                    <Border DockPanel.Dock="Left"
                                            Margin="4 0"
                                            Width="12" Height="12">
                                        <ToggleButton Theme="{StaticResource TreeDataGridExpandCollapseChevron}"
                                                      x:Name="SimonToggle"
                                                      Focusable="False"
                                                      IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
                                                      IsVisible="{TemplateBinding ShowExpander}" />
                                    </Border>
                                    <Decorator Name="PART_Content" />
                                </DockPanel>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter>
                
                <!-- Expander ToggleButton styling -->
                <Style Selector="^ ToggleButton#SimonToggle">

                    <Setter Property="Width" Value="20" />
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Foreground" Value="{StaticResource NeutralSubduedBrush}" />

                    <Style Selector="^:pointerover">
                        <Setter Property="Foreground" Value="{StaticResource NeutralStrongBrush}" />
                    </Style>

                    <!-- Icon size is smaller than the actual clickable area -->
                    <Style Selector="^:checked Border,^:unchecked Border">
                        <Setter Property="Width" Value="12" />
                        <Setter Property="Height" Value="12" />
                        <Setter Property="Margin" Value="0" />
                    </Style>

                    <Style Selector="^:unchecked">
                        <Style Selector="^ Path#ChevronPath">
                            <Setter Property="Data" Value="{DynamicResource TreeDataGridItemCollapsedChevronPathData}" />
                        </Style>
                    </Style>
                    
                    <Style Selector="^:checked">
                        <Style Selector="^ Path#ChevronPath">
                            <Setter Property="Data" Value="{DynamicResource TreeDataGridItemExpandedChevronPathData}" />
                        </Style>
                    </Style>
                    
                </Style>
            </Style>

            <!-- Except for first column -->
            <Style Selector="^ :is(TreeDataGridCell):nth-child(1) Border#CellBorder > TextBlock">
                <Setter Property="Foreground" Value="{StaticResource NeutralModerateBrush}" />
            </Style>

            <!-- NOTE(insomnious): as per design request, the background of the rows stay as they are with the
             :pointerover and :selected styles applied to the child 'PART_CellsPresenter' element. This is to allow
             for layering translucent colours. -->

            <!-- Root Rows styling -->
            <!-- "RootRow" is a class that was manually added to the TreeDataGridRow that have indent level 0. -->
            <!-- See `NexusMods.App.UI.Controls.CustomElementFactory.cs` for more information. -->
            <Style Selector="^.RootRow">
                <Setter Property="ZIndex" Value="100" />
                <Setter Property="Background" Value="{StaticResource SurfaceLowBrush}" />

                <Style Selector="^ Border#RowBorder">
                    <Setter Property="BoxShadow" Value="{StaticResource DropShadowSM}" />
                </Style>

                <!-- <Style Selector="^ /template/ TreeDataGridCellsPresenter#PART_CellsPresenter"> -->
                <!--     <Setter Property="Background" Value="{StaticResource SurfaceLowBrush}" /> -->
                <!-- </Style> -->
            </Style>


            <!-- Child rows styling -->
            <Style Selector="^:not(.RootRow)">
                <Setter Property="ZIndex" Value="50" />
                <Setter Property="Background" Value="{StaticResource SurfaceTransparentBrush}" />

                <!-- <Style Selector="^ /template/ TreeDataGridCellsPresenter#PART_CellsPresenter"> -->
                <!--     <Setter Property="Background" Value="{StaticResource SurfaceTransparentBrush}" /> -->
                <!-- </Style> -->
            </Style>


            <!-- All rows hover styling -->

            <Style Selector="^:pointerover /template/ TreeDataGridCellsPresenter#PART_CellsPresenter">
                <Setter Property="Background" Value="{StaticResource SurfaceTranslucentLowBrush}" />
            </Style>


            <!-- All rows selection styling -->

            <Style Selector="^:selected /template/ TreeDataGridCellsPresenter#PART_CellsPresenter">
                <Setter Property="Background" Value="{StaticResource SurfaceTranslucentMidBrush}" />
            </Style>

        </Style>
    </Style>

    
    
    

    <!-- White caret styling -->
    <!-- <Style Selector="TreeDataGrid.TreeWhiteCaret"> -->
    <!--     <Style Selector="^ TreeDataGridExpanderCell > Border > DockPanel > Border > ToggleButton"> -->
    <!--         <Setter Property="Width" Value="16" /> -->
    <!--         <Setter Property="Height" Value="16" /> -->
    <!--         <Setter Property="Foreground" Value="{StaticResource NeutralSubduedBrush}" /> -->
    <!-- -->
    <!--         <Style Selector="^:pointerover"> -->
    <!--             <Setter Property="Foreground" Value="{StaticResource NeutralStrongBrush}" /> -->
    <!--         </Style> -->
    <!--     </Style> -->
    <!-- </Style> -->


</Styles>
